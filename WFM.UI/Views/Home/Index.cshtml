@{
    ViewBag.Title = "Dashboard";
}

<style>

    @@media screen {
        #printSection {
            display: none;
        }
    }

    @@media (min-width: 992px) {
        .modal-dialog {
            max-width: 60%;
        }
    }

    @@media print {
        body * {
            visibility: hidden;
        }

        #printSection, #printSection * {
            visibility: visible;
        }

        #printSection {
            position: absolute;
            left: 10px;
            top: 0;
        }
    }

    table.report-container {
        page-break-after: always;
    }

    thead.report-header {
        display: table-header-group;
    }

    tfoot.report-footer {
        display: table-footer-group;
    }

    tr {
        page-break-inside: avoid;
        page-break-after: auto
    }
</style>
<sty>
    <div class="dashboard-ecommerce">
        <div class="container-fluid dashboard-content ">
            <div class="row">
                <div class="col-xl-2 col-lg-2 col-md-12 col-sm-12 col-8">
                    <div class="page-header">
                        <h2 class="pageheader-title">Dashboard</h2>
                    </div>
                </div>

            </div>

            <div class="border border-primary bg-actual-white">
                <input type="hidden" value="@ViewBag.Months" id="x-axis" />
                <input type="hidden" value="@ViewBag.TotalQuotes" id="total-quotes" />
                <input type="hidden" value="@ViewBag.TotalConvertedJobs" id="total-orders" />
          
            </div>
            <br />
         
            @if (User.IsInRole("Administrator") || User.IsInRole("Factory") || User.IsInRole("Sales") || User.IsInRole("Management") || User.IsInRole("Design") || User.IsInRole("Department"))
            {<br />
                <h3>Recent Jobs</h3>
                <div class="border border-primary bg-actual-white m-t-20">
                    <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 m-t-20  m-b-20">
                        <div class="form-check form-check-inline pb-2">
                            <input class="btn btn-primary active" type="button" id="AllOrders" value="All">
                        </div>
                        <div class="form-check form-check-inline pb-2">
                            <input class="btn btn-primary" type="button" id="CompleteOrders" value="Completed">
                        </div>
                        <div class="form-check form-check-inline pb-2">
                            <input class="btn btn-secondary" type="button" id="CancelledOrders" value="Cancelled">
                        </div>

                        <div class="table-responsive">

                            <table id="List" class="table table-striped table-bordered first">
                                <thead>
                                    <tr>
                                        <th>PO No</th>
                                        <th>Client</th>
                                        <th>Location</th>
                                        <th>Status</th>
                                        <th>Created Date (MM/DD//YYYY)</th>
                                        <th>Month</th>
                                        <th>Channeled By</th>
                                        <th></th>
                                        <th></th>
                                        <th></th>
                                        <th></th>
                                    </tr>
                                </thead>
                            </table>

                        </div>

                    </div>
                </div>
            }
            else
            {
                <div style="display:flex;justify-content:center;min-height:3.5rem;padding:1.2rem 0 1rem 0;background-color:white;border-radius:10px;">
                    <h2 style="font-size:3rem;">Please Login to the system.</h2>
                </div>
            }
            @if (User.IsInRole("Administrator") ||  User.IsInRole("Sales") || User.IsInRole("Management"))
            {<br />
                <h3>Recent Qoutes</h3>
                <div class="border border-primary bg-actual-white  m-b-10">
                    <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 m-t-20">
                        <div class="table-responsive">

                            <table id="ListQ" class="table table-striped table-bordered first">
                                <thead>
                                    <tr>
                                        <th>Code</th>
                                        <th>Client</th>    
                                        <th>Header</th>
                                        <th>Value</th>
                                        <th>Created Date (MM/DD//YYYY)</th>
                                        @*<th></th>*@
                                        <th></th>
                                        <th></th>
                                        <th></th>
                                        <th></th>
                                    </tr>
                                </thead>
                            </table>

                        </div>
                    </div>
                </div>
            }

        </div>
    </div>

    <div class="modal fade" id="reportModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                  
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body" id="Preview">
                    @*Html.Partial("_PrintOrder")*@
                </div>
                <div class="modal-footer">

                    <button id="btnPrint" type="button" class="btn btn-primary">Print</button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
    <script>
    $(document).ready(function () {

            LoadOrders();
            LoadQuotes();


    });

    // document.getElementById("btnPrint").onclick = function () {
    //    printElement(document.getElementById("printThis"));
    //}

        document.getElementById("btnPrint").onclick = function () {
            printElement(document.getElementById("printThis"));
        }

        const allOrdersButton = document.getElementById("AllOrders");
        const completeOrdersButton = document.getElementById("CompleteOrders");
        const cancelledOrdersButton = document.getElementById("CancelledOrders");

        cancelledOrdersButton.addEventListener("click", function () {
            completeOrdersButton.classList.remove("active")
            allOrdersButton.classList.remove("active")
            cancelledOrdersButton.classList.add("active")
            LoadCancelledOrders();
        });

        allOrdersButton.addEventListener("click", function () {
            completeOrdersButton.classList.remove("active")
            allOrdersButton.classList.add("active")
            LoadOrders();
        });

        completeOrdersButton.addEventListener("click", function () {
            completeOrdersButton.classList.add("active")
            allOrdersButton.classList.remove("active")
            LoadCompleteOrders();
        });

    function printElement(elem) {
        var domClone = elem.cloneNode(true);

        var $printSection = document.getElementById("printSection");

        if (!$printSection) {
            var $printSection = document.createElement("div");
            $printSection.id = "printSection";
            document.body.appendChild($printSection);
        }

        $printSection.innerHTML = "";
        $printSection.appendChild(domClone);
        window.print();
        }


    function PrintQuote(id) {
        $.ajax({
            type: "GET",
            url: '@Url.Action("PrintQuote", "Quote")',
            data: { id: id },
            success: function (data) {
                $('#Preview').html(data);
                $('#reportModal').modal('show');
            }
        })
        }

     function ApproveQuote(id) {
        if (confirm("Are you sure?")) {
            $.ajax({
                type: "GET",
                url: '@Url.Action("ApproveQuote", "Quote")',
                data: { id: id },
                success: function (data) {
                    LoadQuotes();
                }
            })
        }
    }

    function PrintOrder(id) {
        $.ajax({
            type: "GET",
            url: '@Url.Action("PrintOrder", "Order")',
            data: { id: id },
            success: function (data) {
                $('#Preview').html(data);
                $('#reportModal').modal('show');
            }
        })
    }

      function ApproveOrder(id) {
        $.ajax({
            type: "GET",
            url: '@Url.Action("Approve", "Order")',
            data: { id: id },
            success: function (data) {
                alert("Order has been approved");
                LoadOrders();

            }
        })
        }

        function GenerateInvoice(id) {
        $.ajax({
            type: "GET",
            url: '@Url.Action("GenerateInvoice", "Invoice")',
            data: { id: id },
            success: function (data) {
                alert("Invoice Genrated");
            }
        })
    }
     function LoadOrders() {

        if ($.fn.dataTable.isDataTable('#List')) {
            table = $('#List').DataTable();
            table.destroy();
        }

        $('#List').DataTable({
            "ordering": false,
            "createdRow": function (row, data, dataIndex) {

            },
            "ajax": {
                "url": "/Order/GetList",
                "type": "POST",
                "datatype": "json"
            },
            "columns": [
                { "data": "Code", "width": "10%" ,"ordering": false, "sorting": false },
                { "data": "ClientName", "width": "20%", "ordering": false, "sorting": false },
                { "data": "Location", "width": "25%", "ordering": false, "sorting": false },
                { "data": "StatusName", "width": "10%", "ordering": false, "sorting": false },
                { "data": "CreatedDateString", "width": "15%", "ordering": false, "sorting": false },
                { "data": "Month", "width": "5%", "ordering": false, "sorting": false },
                { "data": "ChanneledBy", "width": "15%", "ordering": false, "sorting": false },
                {
                    "data": "Id", "searchable": false, "ordering": false, "sorting": false,
                    "render": function (data, type, full, meta) {
                        return '<a class="btn btn-info btn-xs" onclick="PrintOrder(' + data + ')">View</a>';
                    }
                },
                {
                    "data": "Id", "searchable": false, "ordering": false, "sorting": false,
                    "render": function (data, type, full, meta) {

                            return '@if (User.IsInRole("Administrator") || User.IsInRole("Factory")) {  <a class="btn btn-secondary btn-xs" href="/Order/Details/' + data + '" target="_blank">Edit</a>}';
                            //|| User.IsInRole("Factory")
                    }
                },

                {
                    "data": "Id",  "searchable": false, "ordering": false, "sorting": false,
                    "render": function (data, type, full, meta)
                    {
                        var rowvalue = full.IsApproved;
                        if (rowvalue == true) {
                            return '@if (User.IsInRole("Administrator")) {  <a class="btn btn-warning btn-xs" onclick="ApproveOrder(' + data + ')" >Approve</a>}';
                        }//||User.IsInRole("Factory")
                        else {

                             return '';
                        }

                    }
                },
                {
                    "data": "Id", "searchable": false, "ordering": false, "sorting": false,
                    "render": function (data, type, full, meta) {
                        return '';
                    }
                },
       
            ]
        });

    }

        //Load Comleted orders
        function LoadCompleteOrders() {

            if ($.fn.dataTable.isDataTable('#List')) {
                table = $('#List').DataTable();
                table.destroy();
            }

            $('#List').DataTable({
                "ordering": false,
                "createdRow": function (row, data, dataIndex) {

                },
                "ajax": {
                    "url": "/Order/GetCompletedList",
                    "type": "POST",
                    "datatype": "json"
                },
                "columns": [
                    { "data": "Code", "width": "10%", "ordering": false, "sorting": false },
                    { "data": "ClientName", "width": "20%", "ordering": false, "sorting": false },
                    { "data": "Location", "width": "25%", "ordering": false, "sorting": false },
                    { "data": "StatusName", "width": "10%", "ordering": false, "sorting": false },
                    { "data": "CreatedDateString", "width": "15%", "ordering": false, "sorting": false },
                    { "data": "Month", "width": "5%", "ordering": false, "sorting": false },
                    { "data": "ChanneledBy", "width": "15%", "ordering": false, "sorting": false },
                    {
                        "data": "Id", "searchable": false, "ordering": false, "sorting": false,
                        "render": function (data, type, full, meta) {
                            return '<a class="btn btn-secondary btn-xs" onclick="PrintOrder(' + data + ')">View</a>';
                        }
                    },
                    {
                        "data": "Id", "searchable": false, "ordering": false, "sorting": false,
                        "render": function (data, type, full, meta) {

                            return '@if (User.IsInRole("Administrator") || User.IsInRole("Factory")) {  <a class="btn btn-info btn-xs" href="/Order/Details/' + data + '" target="_blank">Edit</a>}';
                            //||User.IsInRole("Factory")
                        }
                    },

                    {
                        "data": "Id", "searchable": false, "ordering": false, "sorting": false,
                        "render": function (data, type, full, meta) {
                            var rowvalue = full.IsApproved;
                            if (rowvalue == true) {
                                return '@if (User.IsInRole("Administrator")) {  <a class="btn btn-info btn-xs" onclick="ApproveOrder(' + data + ')" >Approve</a>}';
                            }//||User.IsInRole("Factory")
                            else {

                                return '';
                            }

                        }
                    },
                    {
                    "data": "Id",  "searchable": false, "ordering": false, "sorting": false,
                    "render": function (data, type, full, meta)
                    {
                        var rowvalue = full.IsApproved;
                        if (rowvalue == true) {
                            return '@if (User.IsInRole("Administrator")) {  <a class="btn btn-success btn-xs" onclick="GenerateInvoice(' + data + ')" >Invoice</a>}';
                        }//||User.IsInRole("Factory")
                        else {

                             return '';
                        }

                    }
                }

                ]
            });
        }


        function LoadCancelledOrders() {

            if ($.fn.dataTable.isDataTable('#List')) {
                table = $('#List').DataTable();
                table.destroy();
            }

            $('#List').DataTable({
                "ordering": false,
                "createdRow": function (row, data, dataIndex) {

                },
                "ajax": {
                    "url": "/Order/GetCancelledList",
                    "type": "POST",
                    "datatype": "json"
                },
                "columns": [
                    { "data": "Code", "width": "10%", "ordering": false, "sorting": false },
                    { "data": "ClientName", "width": "20%", "ordering": false, "sorting": false },
                    { "data": "Location", "width": "25%", "ordering": false, "sorting": false },
                    { "data": "StatusName", "width": "10%", "ordering": false, "sorting": false },
                    { "data": "CreatedDateString", "width": "15%", "ordering": false, "sorting": false },
                    { "data": "Month", "width": "5%", "ordering": false, "sorting": false },
                    { "data": "ChanneledBy", "width": "15%", "ordering": false, "sorting": false },
                    {
                        "data": "Id", "searchable": false, "ordering": false, "sorting": false,
                        "render": function (data, type, full, meta) {
                            return '';
                        }
                    },
                    {
                        "data": "Id", "searchable": false, "ordering": false, "sorting": false,
                        "render": function (data, type, full, meta) {

                            return '';
                            //||User.IsInRole("Factory")
                        }
                    },

                    {
                        "data": "Id", "searchable": false, "ordering": false, "sorting": false,
                        "render": function (data, type, full, meta) {
                            var rowvalue = full.IsApproved;
                            if (rowvalue == true) {
                                return '';
                            }//||User.IsInRole("Factory")
                            else {

                                return '';
                            }

                        }
                    },
                    {
                        "data": "Id", "searchable": false, "ordering": false, "sorting": false,
                        "render": function (data, type, full, meta) {
                            return '';
                        }
                    },

                 
                ]
            });

        }



      function LoadQuotes() {

          if ($.fn.dataTable.isDataTable('#ListQ')) {
              table = $('#ListQ').DataTable();
            table.destroy();
        }

          $('#ListQ').DataTable({
            "ajax": {
                "url": "/Quote/GetDashboardList",
                "type": "POST",
                "datatype": "json"
            },
            "columnDefs": [
                { "className": "dt-center", "targets": "_all" }
            ],
            "columns": [
                { "data": "Code", "width": "10%" },
                { "data": "ClientName", "width": "30%" },
                { "data": "Header", "width": "20%" },
                { "data": "Value", "width": "10%" },
                { "data": "CreatedDateString", "width": "20%" },
                {
                    "data": "Id", "searchable": false, "ordering": false, "sorting": false,
                    "render": function (data, type, full, meta) {
                        if (full.IsApproved == true)
                            return ' @if (User.IsInRole("Administrator")){<a class="btn btn-success btn-xs" onclick="#" >Approved</a>}';
                        else
                            return '@if (User.IsInRole("Administrator")){<a class="btn btn-warning btn-xs" onclick="ApproveQuote(' + data + ')" >&nbsp;Approve&nbsp;</a>}';
                    }
                },
                {
                    "data": "Id", "searchable": false, "ordering": false, "sorting": false,
                    "render": function (data, type, full, meta) {
                        return '@if ((User.IsInRole("Administrator"))||(User.IsInRole("Finance"))){<a class="btn btn-info btn-xs" onclick="PrintQuote(' + data + ')">View</a>}';
                    }
                },
                {
                    "data": "Id", "searchable": false, "ordering": false, "sorting": false,
                    "render": function (data, type, full, meta) {
                         if(full.IsApproved == false)
                             return '@if (User.IsInRole("Administrator")){<a class="btn btn-secondary btn-xs" href="/Quote/Details/' + data + '" target="_blank">&nbsp;&nbsp;&nbsp;Edit&nbsp;&nbsp;&nbsp;</a>}';
                        else
                             return '@if (User.IsInRole("Administrator")){<a class="btn btn-primary btn-xs" onclick="WayForwardQuote(' + data + ')" >Convert</a>}';
                    }
                },
                {
                    "data": "Id", "searchable": false, "ordering": false, "sorting": false,
                    "render": function (data, type, full, meta) {
                        return '@if (User.IsInRole("Administrator")){<a class="btn btn-danger btn-xs" href="/Quote/Archive/' + data + '" target="_blank">Archive</a>}';
                    }
                },
            ]
        });

    }

    var xaxis = $('#x-axis').val().split(',');
    var totalquotes = $('#total-quotes').val().split(',');
    var totalorders = $('#total-orders').val().split(',');

    var chart = c3.generate({
        bindto: '#chart',
        data: {
            columns: [
                totalquotes,
                totalorders
            ],
            axes: {
                data2: 'y2'
            },
            type: 'bar'
        },
        axis: {
            x: {
                type: 'category',
                categories: xaxis
            }
        }
    });
    </script>
