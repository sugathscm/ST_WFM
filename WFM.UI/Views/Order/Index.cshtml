@model WFM.DAL.Order

@{
    ViewBag.Title = "Order";
    ViewBag.ButtonLink = "'/Order/Details'";
}

<style>

    @@media screen {
        #printSection {
            display: none;
        }
    }

    @@media (min-width: 992px) {
        .modal-dialog {
            max-width: 60%;
        }
    }

    @@media print {
        body * {
            visibility: hidden;
        }

        #printSection, #printSection * {
            visibility: visible;
        }

        #printSection {
            position: absolute;
            left: 10px;
            top: 0;
        }
    }

    table.report-container {
        page-break-after: always;
    }

    thead.report-header {
        display: table-header-group;
    }

    tfoot.report-footer {
        display: table-footer-group;
    }

    tr {
        page-break-inside: avoid;
        page-break-after: auto
    }
</style>

<div class="dashboard-ecommerce">
    <div class="container-fluid dashboard-content ">
        <!-- ============================================================== -->
        <!-- pageheader  -->
        <!-- ============================================================== -->
        @Html.Partial("_PageHeaderPartialWithButton")
        <!-- ============================================================== -->
        <!-- end pageheader  -->
        <!-- ============================================================== -->

        <div class="border border-primary bg-actual-white  m-b-10">

            <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 m-t-20">
                <div class="form-check form-check-inline pb-2">
                    <input class="btn btn-primary active" type="button" id="AllOrders" value="All">
                </div>
                <div class="form-check form-check-inline pb-2">
                    <input class="btn btn-primary" type="button" id="CompleteOrders" value="Completed">
                </div>
                <div class="form-check form-check-inline pb-2">
                    <input class="btn btn-secondary" type="button" id="CancelledOrders" value="Cancelled">
                </div>
                <div class="table-responsive">
                    <table id="List" class="table table-striped table-bordered first">
                        <thead>
                            <tr>
                                <th>PO No</th>
                                <th>Client</th>
                                <th>Location</th>
                                <th>Status</th>
                                <th>Created Date (MM/DD/YYYY)</th>
                                <th>Month</th>
                                <th>Channeled By</th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>

                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="reportModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                @* <h5 class="modal-title" id="exampleModalLabel">Medical Report</h5>*@
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" id="Preview">
                @*Html.Partial("_PrintOrder")*@
            </div>
            <div class="modal-footer">

                <button id="btnPrint" type="button" class="btn btn-primary">Print</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>


<script type="text/javascript">
    $(document).ready(function () {
        LoadOrders();
    });


    document.getElementById("btnPrint").onclick = function () {
        printElement(document.getElementById("printThis"));
    }
    const allOrdersButton = document.getElementById("AllOrders");
    const completeOrdersButton = document.getElementById("CompleteOrders");
    const cancelledOrdersButton = document.getElementById("CancelledOrders");

    cancelledOrdersButton.addEventListener("click", function () {
        completeOrdersButton.classList.remove("active")
        allOrdersButton.classList.remove("active")
        cancelledOrdersButton.classList.add("active")
        LoadCancelledOrders();
    });

    allOrdersButton.addEventListener("click", function () {
        completeOrdersButton.classList.remove("active")
        cancelledOrdersButton.classList.remove("active")
        allOrdersButton.classList.add("active")
        LoadOrders();
    });

    completeOrdersButton.addEventListener("click", function () {
        completeOrdersButton.classList.add("active")
        cancelledOrdersButton.classList.remove("active")
        allOrdersButton.classList.remove("active")
        LoadCompleteOrders();
    });



    // Add a change event listener to the radio buttons
   /* allOrdersRadio.addEventListener("change", function () {
        if (this.checked) {
            completeOrdersRadio.checked = false;

        }
    });

    completeOrdersRadio.addEventListener("change", function () {
        if (this.checked) {
            allOrdersRadio.checked = false;
            LoadCompleteOrders();
        }
    });*/


    function printElement(elem) {
        var domClone = elem.cloneNode(true);

        var $printSection = document.getElementById("printSection");

        if (!$printSection) {
            var $printSection = document.createElement("div");
            $printSection.id = "printSection";
            document.body.appendChild($printSection);
        }

        $printSection.innerHTML = "";
        $printSection.appendChild(domClone);
        window.print();
    }

    function PrintOrder(id) {
        $.ajax({
            type: "GET",
            url: '@Url.Action("PrintOrder", "Order")',
            data: { id: id },
            success: function (data) {
                $('#Preview').html(data);
                $('#reportModal').modal('show');
            }
        })
    }

      function ApproveOrder(id) {
        $.ajax({
            type: "GET",
            url: '@Url.Action("Approve", "Order")',
            data: { id: id },
            success: function (data) {
                alert("Order has been approved");
                LoadOrders();

            }
        })
    }
    function GenerateInvoice(id) {
        $.ajax({
            type: "GET",
            url: '@Url.Action("GenerateInvoice", "Invoice")',
            data: { id: id },
            success: function (data) {
                alert("Invoice Genrated");
            }
        })
    }
    //Load active Orders
    function LoadOrders() {

        if ($.fn.dataTable.isDataTable('#List')) {
            table = $('#List').DataTable();
            table.destroy();
        }

        $('#List').DataTable({
            "ordering": false,
            "createdRow": function (row, data, dataIndex) {

            },
            "ajax": {
                "url": "/Order/GetList",
                "type": "POST",
                "datatype": "json"
            },
            "columns": [
                { "data": "Code", "width": "10%", "ordering": false, "sorting": false },
                { "data": "ClientName", "width": "20%", "ordering": false, "sorting": false },
                { "data": "Location", "width": "25%", "ordering": false, "sorting": false },
                { "data": "StatusName", "width": "10%", "ordering": false, "sorting": false },
                { "data": "CreatedDateString", "width": "15%", "ordering": false, "sorting": false },
                { "data": "Month", "width": "5%", "ordering": false, "sorting": false },
                { "data": "ChanneledBy", "width": "15%", "ordering": false, "sorting": false },
                {
                    "data": "Id", "searchable": false, "ordering": false, "sorting": false,
                    "render": function (data, type, full, meta) {
                        return '<a class="btn btn-secondary btn-xs" onclick="PrintOrder(' + data + ')">View</a>';
                    }
                },
                {
                    "data": "Id", "searchable": false, "ordering": false, "sorting": false,
                    "render": function (data, type, full, meta) {

                            return '@if (User.IsInRole("Administrator") || User.IsInRole("Factory")) {  <a class="btn btn-info btn-xs" href="/Order/Details/' + data + '" target="_blank">Edit</a>}';
                            //||User.IsInRole("Factory")
                    }
                },

                {
                    "data": "Id",  "searchable": false, "ordering": false, "sorting": false,
                    "render": function (data, type, full, meta)
                    {
                        var rowvalue = full.IsApproved;
                        if (rowvalue == true) {
                            return '@if (User.IsInRole("Administrator")) {  <a class="btn btn-info btn-xs" onclick="ApproveOrder(' + data + ')" >Approve</a>}';
                        }//||User.IsInRole("Factory")
                        else {

                             return '';
                        }

                    }
                },
                {
                    "data": "Id", "searchable": false, "ordering": false, "sorting": false,
                    "render": function (data, type, full, meta) {
                        return '';
                    }
                },

            ]
        });

    }

    //Load Comleted orders
        function LoadCompleteOrders() {

        if ($.fn.dataTable.isDataTable('#List')) {
            table = $('#List').DataTable();
            table.destroy();
        }

        $('#List').DataTable({
            "ordering": false,
            "createdRow": function (row, data, dataIndex) {

            },
            "ajax": {
                "url": "/Order/GetCompletedList",
                "type": "POST",
                "datatype": "json"
            },
           "columns": [
               { "data": "Code", "width": "10%", "ordering": false, "sorting": false },
               { "data": "ClientName", "width": "20%", "ordering": false, "sorting": false },
               { "data": "Location", "width": "25%", "ordering": false, "sorting": false },
               { "data": "StatusName", "width": "10%", "ordering": false, "sorting": false },
               { "data": "CreatedDateString", "width": "15%", "ordering": false, "sorting": false },
               { "data": "Month", "width": "5%", "ordering": false, "sorting": false },
               { "data": "ChanneledBy", "width": "15%", "ordering": false, "sorting": false },
                    {
                        "data": "Id", "searchable": false, "ordering": false, "sorting": false,
                        "render": function (data, type, full, meta) {
                            return '<a class="btn btn-secondary btn-xs" onclick="PrintOrder(' + data + ')">View</a>';
                        }
                    },
                    {
                        "data": "Id", "searchable": false, "ordering": false, "sorting": false,
                        "render": function (data, type, full, meta) {

                            return '@if (User.IsInRole("Administrator") || User.IsInRole("Factory")) {  <a class="btn btn-info btn-xs" href="/Order/Details/' + data + '" target="_blank">Edit</a>}';
                            //||User.IsInRole("Factory")
                        }
                    },

                    {
                        "data": "Id", "searchable": false, "ordering": false, "sorting": false,
                        "render": function (data, type, full, meta) {
                            var rowvalue = full.IsApproved;
                            if (rowvalue == true) {
                                return '@if (User.IsInRole("Administrator")) {  <a class="btn btn-info btn-xs" onclick="ApproveOrder(' + data + ')" >Approve</a>}';
                            }//||User.IsInRole("Factory")
                            else {

                                return '';
                            }

                        }
                    },
                    {
                    "data": "Id",  "searchable": false, "ordering": false, "sorting": false,
                    "render": function (data, type, full, meta)
                    {
                        var rowvalue = full.IsApproved;
                        if (rowvalue == true) {
                            return '@if (User.IsInRole("Administrator")) {  <a class="btn btn-success btn-xs" onclick="GenerateInvoice(' + data + ')" >Invoice</a>}';
                        }//||User.IsInRole("Factory")
                        else {

                             return '';
                        }

                    }
                }

                ]
        });

    }


    function LoadCancelledOrders() {

    if ($.fn.dataTable.isDataTable('#List')) {
        table = $('#List').DataTable();
        table.destroy();
    }

    $('#List').DataTable({
        "ordering": false,
        "createdRow": function (row, data, dataIndex) {

        },
        "ajax": {
            "url": "/Order/GetCancelledList",
            "type": "POST",
            "datatype": "json"
        },
        "columns": [
            { "data": "Code", "width": "10%", "ordering": false, "sorting": false },
            { "data": "ClientName", "width": "20%", "ordering": false, "sorting": false },
            { "data": "Location", "width": "25%", "ordering": false, "sorting": false },
            { "data": "StatusName", "width": "10%", "ordering": false, "sorting": false },
            { "data": "CreatedDateString", "width": "15%", "ordering": false, "sorting": false },
            { "data": "Month", "width": "5%", "ordering": false, "sorting": false },
            { "data": "ChanneledBy", "width": "15%", "ordering": false, "sorting": false },
            {
                "data": "Id", "searchable": false, "ordering": false, "sorting": false,
                "render": function (data, type, full, meta) {
                    return '';
                }
            },
            {
                "data": "Id", "searchable": false, "ordering": false, "sorting": false,
                "render": function (data, type, full, meta) {

                        return '';
                        //||User.IsInRole("Factory")
                }
            },

            {
                "data": "Id",  "searchable": false, "ordering": false, "sorting": false,
                "render": function (data, type, full, meta)
                {
                    var rowvalue = full.IsApproved;
                    if (rowvalue == true) {
                        return '';
                    }//||User.IsInRole("Factory")
                    else {

                         return '';
                    }

                }
            },
            {
                "data": "Id", "searchable": false, "ordering": false, "sorting": false,
                "render": function (data, type, full, meta) {
                    return '';
                }
            },

        ]
    });

}
</script>


@section Scripts    {
    @Scripts.Render("~/bundles/jqueryval")
}
