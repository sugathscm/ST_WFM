@{
    ViewBag.Title = "Invoice";
}

<style>

    @@media screen {
        #printSection {
            display: none;
        }
    }

    @@media (min-width: 992px) {
        .modal-dialog {
            max-width: 60%;
        }
    }

    @@media print {
        body * {
            visibility: hidden;
        }

        #printSection, #printSection * {
            visibility: visible;
        }

        #printSection {
            position: absolute;
            left: 10px;
            top: 0;
        }
    }

    table.report-container {
        page-break-after: always;
    }

    thead.report-header {
        display: table-header-group;
    }

    tfoot.report-footer {
        display: table-footer-group;
    }

    tr {
        page-break-inside: avoid;
        page-break-after: auto
    }
</style>

<div class="dashboard-ecommerce">
    <div class="container-fluid dashboard-content ">
        <div class="row">
            <div class="col-xl-2 col-lg-2 col-md-12 col-sm-12 col-8">
                <div class="page-header">
                    <h2 class="pageheader-title">Invoice</h2>
                </div>
            </div>

        </div>

        <div class="border border-primary bg-actual-white">

        </div>
        <br />

        @if (User.IsInRole("Administrator") || User.IsInRole("Factory") || User.IsInRole("Sales") || User.IsInRole("Management") || User.IsInRole("Design") || User.IsInRole("Department"))
        {<br />
            <h3>Invoices</h3>
            <div class="border border-primary bg-actual-white m-t-20">
                <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 m-t-20  m-b-20">

                    <div class="d-flex justify-content-around mb-4">

                        <div class="col-2">
                            <label for="fromDate">From:</label>
                            <input type="date" id="fromDate" name="fromDate" class="form-control">
                        </div>
                        <div class="col-2">
                            <label for="toDate">To:</label>
                            <input type="date" id="toDate" name="toDate" class="form-control">
                        </div>

                        <div class="col-2">
                            <label for="clientFilter">Client:</label>
                            <input type="text" id="clientFilter" name="clientFilter" class="form-control">
                        </div>
                        <div class="col-2">
                            <label for="salesFilter">Sales person:</label>
                            <input type="text" id="salesFilter" name="salesFilter" class="form-control">
                        </div>
                    </div>

                    <div class="table-responsive">
                        <div class="w-100 p-2 flex flex-row justify-content-end">
                            <button class="btn btn-primary" id="pdfButton">Print Pdf</button>
                            <button class="btn btn-primary" id="exportButton">Export to Excel</button>
                        </div>
                        <table id="List" class="table table-striped table-bordered first overflow-auto">
                            <thead>
                                <tr>
                                    <th>Invoice No</th>
                                    <th>Order No</th>
                                    <th>Client</th>
                                    <th>Created Date</th>
                                    <th>ChannelledBy</th>

                                </tr>
                            </thead>
                        </table>

                    </div>

                </div>
            </div>
        }
        else
        {
            <div style="display:flex;justify-content:center;min-height:3.5rem;padding:1.2rem 0 1rem 0;background-color:white;border-radius:10px;">
                <h2 style="font-size:3rem;">Please Login to the system.</h2>
            </div>
        }

    </div>
</div>

<div class="modal fade" id="reportModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">

                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" id="Preview">
                @*Html.Partial("_PrintOrder")*@
            </div>
            <div class="modal-footer">

                <button id="btnPrint" type="button" class="btn btn-primary">Print</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.14/jspdf.plugin.autotable.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.4/xlsx.full.min.js"></script>


<script>

    $(document).ready(function () {
        LoadInvoices();
    });

    const { jsPDF } = window.jspdf;
    function exportToPdf() {
        const props = ["Code", "OrderCode", "ClientName", "Channelledby", "CreatedDateString"]
        const headers = ["Invoice No", "Order No", "Client", "Channelled By", "Created Date"]
        var options = {
            headStyles: { fontSize: 8, fontStyle: 'bold' }, // Header styles (e.g., font size, font style)
            bodyStyles: { fontSize: 6 }, 
            columnStyles: {
                0: { cellWidth: 'auto' },
                1: { cellWidth: 'auto' },
                2: { cellWidth: 'auto' },
                3: { cellWidth: 'auto' },
                4: { cellWidth: 'auto' }
            } 
        };

        var table = $('#List').DataTable();
        var doc = new jsPDF();

        
        var data = table.rows({ search: 'applied' }).data().toArray();

      
        var filteredData = data.map((row) => {
            return headers.map(header => row[props[headers.indexOf(header)]]);
        });
        console.log(filteredData)

       
        doc.autoTable({
            head: [headers],
            body: filteredData,
            styles: { overflow: 'linebreak' }, // Prevent text wrapping
            ...options
        });

        
        doc.save('InvoiceReport.pdf');


    }
    document.getElementById('pdfButton').addEventListener('click', exportToPdf);

    function exportToExcel() {
        const props = ["Code", "OrderCode", "ClientName", "Channelledby", "CreatedDateString"]
        const headers = ["Invoice No", "Order No", "Client", "Channelled By", "Created Date"]


        var table = $('#List').DataTable();
        var data = table.rows({ search: 'applied' }).data().toArray();
        var filteredData = data.map((row) => {
            var filteredRow = {}
            props.forEach(prop => {
                filteredRow[prop] = row[prop]
            })
            return filteredRow
        })

        filteredData.unshift(headers);

        var dataArray = filteredData.map(function (row) {
            return Object.values(row);
        });

        var wb = XLSX.utils.book_new();
        console.log(filteredData)
        var ws = XLSX.utils.aoa_to_sheet(dataArray);

        XLSX.utils.book_append_sheet(wb, ws, 'Sheet1');

        XLSX.writeFile(wb, 'invoice_data.xlsx');
    }
    document.getElementById('exportButton').addEventListener('click', exportToExcel);


    let minDate, maxDate, clientFilter, SalesPersonFilter;


    function LoadInvoices() {

        if ($.fn.dataTable.isDataTable('#List')) {
            table = $('#List').DataTable();
            table.destroy();
        }

        //filter for the table
        $.fn.dataTable.ext.search.push(function (settings, data, dataIndex) {
            let min = minDate ? minDate.getTime() : null;
            let max = maxDate ? maxDate.getTime() : null;
            let date = new Date(data[4]);
            let client = clientFilter ? data[2].toLowerCase().includes(clientFilter.toLowerCase()) : true;
            let salesperson = SalesPersonFilter ? data[4].toLowerCase().includes(SalesPersonFilter.toLowerCase()) : true;

            if (
                ((min === null && max === null) ||
                    (min === null && date <= max) ||
                    (min <= date && max === null) ||
                    (min <= date && date <= max)) &&
                client && salesperson
            ) {
                return true;
            }
            return false;
        });

        // Create date inputs
        $('#fromDate').change(function () {
            minDate = $(this).val() ? new Date($(this).val()) : null;
            table.draw();
        });

        $('#toDate').change(function () {
            maxDate = $(this).val() ? new Date($(this).val()) : null;
            table.draw();
        });


        $('#clientFilter').keyup(function () {
            clientFilter = $(this).val();
            table.draw();
        });
        // Sales Person Filter input event listener
        $('#salesFilter').keyup(function () {
            SalesPersonFilter = $(this).val();
            table.draw();
        });

        table = $('#List').DataTable({
            "ordering": false,
            "createdRow": function (row, data, dataIndex) {

            },
            "ajax": {
                "url": "/Invoice/GetList",
                "type": "POST",
                "datatype": "json"
            },
            "columns": [
                { "data": "Code", "width": "20%", "ordering": false, "sorting": false },
                { "data": "OrderCode", "width": "20%", "ordering": false, "sorting": false },
                { "data": "ClientName", "width": "20%", "ordering": false, "sorting": false },
                { "data": "CreatedDateString", "width": "20%", "ordering": false, "sorting": false },
                { "data": "Channelledby", "width": "20%", "ordering": false, "sorting": false },

            ]


        });

    }

</script>


